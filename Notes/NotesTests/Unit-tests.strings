/* 
  Unit-tests.strings
  Notes

  Created by Волнухин Виктор on 05/07/2019.
  Copyright © 2019 Волнухин Виктор. All rights reserved.
*/


/*   Возможные Unit-тесты    */

1. Проверка всех полей структуры Note на иммутабельность.

2. Проверка всех полей структуры Note, кроме selfDestructionDate, на НЕопциональность.

3. Проверка поля json в расширении NoteExtensions на содержание всех необходимых полей.

4. Проверка функции parse(json:) на возвращение nil, если поля uid, title и content содержат nil.

5. Проверка функции parse(json:) на возвращение корректного экземпляра Note, в случае корректного json.

6. Проверка на НЕсохранение параметра color в json, если он равен .white.

7. Проверка на НЕсохранение параметра importance в json, если он равен .usual.

8. Проверка на НЕсохранение параметра selfDestructionDate, если он равен nil.

9. Проверка сохранения selfDestructionDate в json в виде timeInterval1970.

10. Проверка сохранения параметра color в виде словаря компонентов.

11. Проверка сохранения параметра importance в виде rawValue.

12. Проверка закрытости для внешних изменений коллекции заметок в файле FileNotebook.

13. Проверка на дубли, при добавлении заметки в коллекцию в файле FileNotebook.

14. Проверка на удаление корректной заметки из коллекции в файле FileNotebook.

15. Проверка на корректное добавление заметки в коллекцию в файле FileNotebook.

16. Проверка создания папки .caches, если она не существует, при сохранении файла.

17. Проверка возврата nil, если сериализация данных json закончилась неудачей.

18. Проверка возврата данных, если сериализация данных json закончилась успехом.

19. Проверка создания файла с данными, если папка .caches существует и нормально сериализованы данные из json.

20. Проверка на существование файла при его загрузке.

21. Проверка на успешную десериализацию данных при загрузке файла.

22. Проверка на корректное извлечение данных, если файл существует.

23. Проверка на пустоту извлеченных данных из загруженного файла.
